// Copyright (C) 2020 azumakuniyuki and sisimai development team, All rights reserved.
// This software is distributed under The BSD 2-Clause License.
package fact
import as "sisimai/address"

type Messaging struct {
	from   string            // UNIX From line
	header map[string]string // Header part of an email
	ds     map[string]string // Parsed data by Sisimai::Lhost
	rfc822 map[string]string // Header part of the original message
	catch  string            // The results returned by hook method
}
type Catch interface {}
type FactRR struct {
	Action         string          // The value of Action: header
	Addresser      as.EmailAddress // From address
	Alias          string          // Alias of the recipient address
	Catch                          // [interface] Results generated by hook method
	DeliveryStatus string          // Delivery Status(DSN)
	Destination    string          // The domain part of the "recipinet"
	DiagnosticCode string          // Diagnostic-Code: Header
	DiagnosticType string          // The 1st part of Diagnostic-Code: Header
	FeedbackType   string          // Feedback Type
	HardBounce     bool            // Hard bounce or not
	ListID         string          // List-Id header of each ML
	Lhost          string          // local host name/Local MTA
	MessageID      string          // Message-Id: header
	Origin         string          // Email path as a data source
	Reason         string          // Bounce reason
	Rhost          string          // Remote host name/Remote MTA
	Recipient      as.EmailAddress // Recipient address which bounced
	ReplyCode      string          // SMTP Reply Code
	SMTPAgent      string          // Module(Engine) name
	SMTPCommand    string          // The last SMTP command
	SenderDomain   string          // The domain part of the "addresser"
	Subject        string          // UTF-8 Subject text
	TimeStamp      string          // [Sisimai::Time] Date: header in the original message
	TimezoneOffset uint            // Time zone offset(seconds)
	Token          string          // Message token/MD5 Hex digest value
}

